hub:
  baseUrl: /jupyter
  config:
    Authenticator:
      enable_auth_state: true
    # Lookup URLs from
    # https://<keycloak-url>/realms/<realm>/.well-known/openid-configuration
    GenericOAuthenticator:
      client_id: jupyterhub
      client_secret: jupyterhub-client-secret
      oauth_callback_url: http://%K8S_HOSTNAME%/jupyter/hub/oauth_callback
      authorize_url: http://%K8S_HOSTNAME%/keycloak/realms/master/protocol/openid-connect/auth
      token_url: http://%K8S_HOSTNAME%/keycloak/realms/master/protocol/openid-connect/token
      userdata_url: http://%K8S_HOSTNAME%/keycloak/realms/master/protocol/openid-connect/userinfo
      scope:
        - openid
        # The custom scope name
        - jupyterhub-roles
      login_service: keycloak
      username_key: preferred_username
      userdata_params:
        state: state
      # The location of the custom Keycloak field in the userdata response
      auth_state_groups_key: oauth_user.jupyterhub.roles
      # JupyterHub defers to Keycloak for all group memberships
      manage_groups: true
      allowed_groups:
        # The Keycloak role for JupyterHub users
        - jupyterhub-users
      admin_groups:
        # The Keycloak role for JupyterHub admins
        - jupyterhub-admins
    JupyterHub:
      authenticator_class: generic-oauth

proxy:
  service:
    type: ClusterIP

# singleuser:
#   image:
#     name:
#     tag:

ingress:
  enabled: true
  hosts:
    - %K8S_HOSTNAME%

debug:
  enabled: true
